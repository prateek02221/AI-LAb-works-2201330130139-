from dotenv import load_dotenv
import streamlit as st
import os
import google.generativeai as genai

# Load environment variables
load_dotenv()

# Configure Generative AI
api_key = os.getenv("GENAI_API_KEY")
if not api_key:
    st.error("API key not found. Please set it in your .env file as GENAI_API_KEY.")
    st.stop()

genai.configure(api_key=api_key)
model = genai.GenerativeModel("gemini-1.5-flash")
chat = model.start_chat(history=[])

def get_gemini_response(question):
    try:
        response = chat.send_message(question, stream=True)
        return response
    except Exception as e:
        st.error(f"Error: {str(e)}")
        return None

# Streamlit UI
st.set_page_config(page_title="Q&A Demo")
st.header("Gemini LLM Application")

if 'chat_history' not in st.session_state:
    st.session_state['chat_history'] = []

user_input = st.text_input("Input: ", key="input")
submit = st.button("Ask the question")

if submit and user_input:
    response = get_gemini_response(user_input)
    if response:
        st.session_state['chat_history'].append(("You", user_input))
        st.subheader("The Response is")
        full_response = ""
        for chunk in response:
            st.write(chunk.text)
            full_response += chunk.text
        st.session_state['chat_history'].append(("Bot", full_response))
    
    st.subheader("The Chat History is")
    for role, text in st.session_state['chat_history']:
        st.write(f"{role}: {text}")

